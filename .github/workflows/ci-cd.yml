name: Deploy CI/CD Pipeline

on:
    push:
        branches:
            - dev/auto-deploy

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login to Docker Hub for build
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            - name: Build Docker Image
              run: docker build -t rfjst4real/edulink-api .
            - name: Push Docker Image to Docker Hub
              run: docker push rfjst4real/edulink-api:latest

    deploy:
        needs: build
        runs-on: self-hosted
        steps:
            - name: Login to Docker Hub for deployment
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            - name: Pull docker image
              run: docker pull rfjst4real/edulink-api:latest
            - name: Run container and generate APP_KEY
              run: |
                  # Start the container in detached mode
                  CONTAINER_ID=$(docker run -d rfjst4real/edulink-api:latest)

                  # Generate the APP_KEY
                  APP_KEY=$(docker exec $CONTAINER_ID go run database/database.go -key:generate)

                  # Create the .env file with the generated APP_KEY and other secrets
                  docker exec $CONTAINER_ID sh -c "echo 'APP_KEY=${APP_KEY}' > /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'PORT=${{ secrets.ENV_PORT }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'ALLOW_ORIGIN=${{ secrets.ENV_ALLOW_ORIGIN }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_CONNECTION=postgres' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_HOST=${{ secrets.DB_HOST }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_PORT=${{ secrets.DB_PORT }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_NAME=${{ secrets.DB_NAME }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_USERNAME=${{ secrets.DB_USERNAME }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_SSLMODE=disable' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'DB_TIMEZONE=Asia/Jakarta' >> /app/.env"
                  docker exec $CONTAINER_ID sh -c "echo 'TZ=Asia/Jakarta' >> /app/.env"

                  # Start the application if it's not already running
                  docker exec $CONTAINER_ID ./main

            - name: Delete old container
              run: docker rm -f edulink-api-container || true

            - name: Run docker container
              run: docker run -d -p 8000:8000 --name edulink-api-container rfjst4real/edulink-api:latest
